import os # обеспечивает платформонезависимый доступ к средствам операционной системы. 
# os.path содержит набор функций для работы со строками (путями к файлам) и некоторые вспомогательные функции для работы с файловой системой.
# Кроме того, модуль os содержит множество низкоуровневых, платформозависимых функций


os.getcwd() # рабочий каталог программы
os.chdir() # изменить рабочий каталог программы
os.environ # хранит объект отображения, элементами которого являются имена переменных окружения и их значения.
os.listdir(r'Derictory\Derictory\File') # возвращает список файлов и каталогов в указанном каталоге, но при этом в список никогда не включаются специальные имена каталогов «.» или «..». Без аргументов выводит список текущего католога где сама программа
os.path.getsize(r'Directory\Directory\File') # возвращает размер заданного файла в байтах
os.path.isfile(r'Directory\Directory\File') # True/False если заданный файл существует в данном каталоге
os.path.abspath() # возвращает абсолютный путь для своего аргумента, с удалением избыточных разделителей имен каталогов и элементов
os.path.split() # возвращает кортеж, содержащий 2 элемента, первый элемент которого содержит путь, а второй – имя файла (который будет представлен пустой строкой, если имя файла в указанном пути не задано).
os.path.dirname() # по отдельности получить из функции os.path.split() путь файла 
os.path.basename() # по отдельности получить из функции os.path.split() имя файла
os.path.splittext() # имя файла также может быть разбито на две части – имя и расширение
os.path.join() # принимает произвольное число строк путей и возвращает единый путь, используя платформоза висимый разделитель каталогов.
os.path.exists() 
os.path.isdir()
os.path.getmtime() # когда произошло последнее изменение файла
os.path.splitext(filename) # Split the extension from a pathname. Returns "(root, ext)"; ext may be empty.
os.access() # может использоваться для определения наличия файла или его доступности для чтения или записи.
os.stat() # возвращает различные сведения о файле или каталоге, такие как режим доступа, время последнего обращения и размер.
os.mkdir() # create calatog
os.makedirs() # создать промежуточные каталоги
os.rmdir() # remove empty catalogs
os.removedirs() # удалять деревья каталогов, содержащие только пустые каталоги, – с помощью функции
os.remove() # файлы или каталоги удалять
os.rename() # переименовывать файлы или каталоги
os.walk(path) # позволяет выполнять итерации по всему дереву каталогов, по очереди извлекая все имена файлов и каталогов. Даже скрытные.
# Если итерировать os.walk(path) по 3-м аргументам то 1-ый это сам путь который сейчас разбирается, 2-ой какие каталоги (папки) хранятся по этому пути, 3-ий какие фалы хранятся по этому пути